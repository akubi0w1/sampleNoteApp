openapi: 3.0.0

info:
  version: 1.0.0
  title: 'note App'
  description: 'sample note app that go + react? 認証はjwtをcookieに突っ込む。cookieの制約はsecureとhttpOnly'

tags:
  - name: 'account'
    description: 'account setting?'
  - name: 'users'
    description: 'get infomation of user'
  - name: 'notes'
    description: 'notes'
    
paths:
  /account:
    get:
      summary: 'get account infomation'
      tags: 
        - 'account'
      parameters: 
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: 'return infomation account'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: 'create new account'
      description: 'create account. password hash. gen x-token.'
      tags: 
        - 'account'
      requestBody:
        description: 'infomation account'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: 'return account info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
                
    
  /account/{id}:
    put:
      summary: 'update account infomation'
      tags: 
        - 'account'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        description: 'infomation account'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: 'return account info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 'delete account'
      tags: 
        - 'account'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: 'return message'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  message:
                    type: 'string'
                    example: 'success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
                
  /users:
    get:
      summary: 'get all users infomation'
      tags: 
        - 'users'
      responses:
        '200':
          description: 'return array of users'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  users:
                    type: 'array'
                    items:
                      $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /users/{id}:
    get:
      summary: 'get user info'
      tags:
        - 'users'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          description: 'user id'
          schema:
            type: 'string'
      responses:
        '200':
          description: 'return user info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
  /notes:
    get:
      summary: 'get my all note info'
      tags: 
        - 'notes'
      parameters: 
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: 'return all notes info'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  notes:
                    type: 'array'
                    items:
                      $ref: '#/components/schemas/Note'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: 'create new note'
      description: 'create new note'
      tags: 
        - 'notes'
      parameters: 
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        description: 'infomation note'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
      responses:
        '200':
          description: 'return note info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
        
  /notes/{id}:
    get:
      summary: 'get note info'
      tags:
        - 'notes'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          description: 'note id'
          schema:
            type: 'string'
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: 'return note info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: 'update note'
      description: 'update note'
      tags: 
        - 'notes'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          description: 'note id'
          schema:
            type: 'string'
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        description: 'infomation note'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
      responses:
        '200':
          description: 'return note info'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 'delete note'
      description: 'delete note'
      tags: 
        - 'notes'
      parameters: 
        - name: 'id'
          in: 'path'
          required: true
          description: 'note id'
          schema:
            type: 'string'
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: 'return message'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  message:
                    type: 'string'
                    example: 'success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
components:
  schemas:
    Account:
      properties:
        id:
          type: 'string'
          description: 'user_id'
        name:
          type: 'string'
          description: 'user_name'
        mail:
          type: 'string'
          description: 'mail address'
        created_at:
          type: 'string'
          description: 'date of user created'
    Note:
      properties:
        id:
          type: 'string'
          description: 'note id'
        title:
          type: 'string'
          description: 'note title'
        author:
            $ref: '#/components/schemas/Account'
        content:
          type: 'string'
          description: 'content of note'
        created_at:
          type: 'string'
          description: 'datetime of created note'
        updated_at:
          type: 'string'
          description: 'datetime of update note'
    ErrorResponse:
      properties:
        code:
          type: 'integer'
          description: 'http status code'
        message:
          type: 'string'
          description: 'error content'
    UpdateAccountRequest:
      properties:
        id:
          type: 'string'
        name:
          type: 'string'
        password:
          type: 'string'
    UpdateNoteRequest:
      properties:
        title:
          type: 'string'
        content:
          type: 'string'
  parameters:
    AuthToken:
      name: 'x-token'
      description: 'access token'
      in: 'cookie'
      required: true
      schema:
        type: 'string'
  responses:
    BadRequest:
      description: 'bad request'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            example: 
              code: 400
              message: 'error content'
    Unauthorized:
      description: 'unauthorized error'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            example:
              code: 401
              message: 'error content'
    InternalServerError:
      description: 'internal server error'
      content:
        applicatoin/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            example: 
              code: 500
              message: 'error content'